{
	"info": {
		"_postman_id": "0fc5c9a1-a7ca-4df8-9d3f-7bf0eaecdf59",
		"name": "Postman AutoLabb3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Basic Function",
			"item": [
				{
					"name": "List Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"user_id\", jsonData.data[4].id);",
									"",
									"pm.test(\"Status code is 200\", () => pm.expect(responseCode.code).to.equal(200));",
									"pm.test(\"Response time below 2 sec\", () => pm.expect(pm.response.responseTime).to.be.below(2000));",
									"",
									"pm.test(\"6 users found\", () => pm.expect(jsonData.data.length).to.equal(6));",
									"pm.test(\"Second avatar is not null\", () => pm.expect(jsonData.data[1].avatar).to.not.equal(null));",
									"pm.test(\"Third user's last name\", () => pm.expect(jsonData.data[2].last_name).to.equal(\"Wong\"));",
									"pm.test(\"First name somewhere in response\", () => pm.expect(responseBody).to.include(\"Eve\"));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Single User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test(\"Status code is 200\", () => pm.expect(responseCode.code).to.equal(200));",
									"pm.test(\"Response time below 2 sec\", () => pm.expect(pm.response.responseTime).to.be.below(2000));",
									"",
									"pm.test(\"User id matches with variable\", () => pm.expect(jsonData.data.id).to.equal(pm.globals.get(\"user_id\")));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users/{{user_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"my_user\", jsonData.id);",
									"",
									"pm.test(\"Status code is 201\", () => pm.expect(responseCode.code).to.equal(201));",
									"pm.test(\"Response time below 2 sec\", () => pm.expect(pm.response.responseTime).to.be.below(2000));",
									"",
									"pm.test(\"id is not null\", () => pm.expect(jsonData.id).to.not.equal(null));",
									"pm.test(\"createdAt is not null\", () => pm.expect(jsonData.createdAt).to.not.equal(null));",
									"pm.test(\"User name\", () => pm.expect(jsonData.name).to.equal(\"Felicia AT\"));",
									"pm.test(\"User dream job\", () => pm.expect(jsonData.job).to.equal(\"QA Tester\"));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Felicia AT\",\n    \"job\": \"QA Tester\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test(\"Status code is 200\", () => pm.expect(responseCode.code).to.equal(200));",
									"pm.test(\"Response time below 2 sec\", () => pm.expect(pm.response.responseTime).to.be.below(2000));",
									"",
									"pm.test(\"User's job\", () => pm.expect(jsonData.job).to.equal(\"Postman Master\"));",
									"pm.test(\"createdAt is not null\", () => pm.expect(jsonData.createdAt).to.not.equal(null));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Felicia AT\",\n    \"job\": \"Postman Master\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/{{my_user}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"{{my_user}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => pm.expect(responseCode.code).to.equal(204));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/users/{{my_user}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"{{my_user}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}